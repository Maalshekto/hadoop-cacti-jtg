PreReq

	Hadoop System
		Hadoop (Tested with 0.19.1)
    Hadoop (Tested with 0.20.0)

	Cacti System
		Cacti (Tested with 0.8.7d)

Installation

   Hadoop
     Enable JMX on Each Hadoop Node
       cd <hadoop>/conf
        vi jmxremote.access
        monitorRole   readonly
        controlRole   readwrite

        vi jmxremote.password
        monitorRole     passwd
        controlRole     password

        chmod 600 jmxremote.password

        vi hadoop-env.sh
        ...
        export HADOOP_JMX_BASE="-Dcom.sun.management.jmxremote.ssl=false"
        export HADOOP_JMX_BASE="$HADOOP_JMX_BASE -Dcom.sun.management.jmxremote.password.file=/opt/hadoop-0.19.1/conf/jmxremote.password"
        export HADOOP_JMX_BASE="$HADOOP_JMX_BASE -Dcom.sun.management.jmxremote.access.file=/opt/hadoop-0.19.1/conf/jmxremote.access"

        # Command specific options appended to HADOOP_OPTS when specified
        export HADOOP_NAMENODE_OPTS="$HADOOP_JMX_BASE -Dcom.sun.management.jmxremote.port=10001"
        export HADOOP_SECONDARYNAMENODE_OPTS="$HADOOP_JMX_BASE -Dcom.sun.management.jmxremote.port=10002"
        export HADOOP_DATANODE_OPTS="$HADOOP_JMX_BASE -Dcom.sun.management.jmxremote.port=10003"
        export HADOOP_BALANCER_OPTS="$HADOOP_JMX_BASE -Dcom.sun.management.jmxremote.port=10004"
        export HADOOP_JOBTRACKER_OPTS="$HADOOP_JMX_BASE -Dcom.sun.management.jmxremote.port=10005"
        ...

        Restart Hadoop
   Cacti
    cd /tmp
    svn co http://www.jointhegrid.com/svn/hadoop-cacti-jtg/trunk/
    cd hadoop-cacti-jtg
    ant jar
    cp dist/hadoop-cacti-jtg.jar <cacti_home>/scripts/
    cp -r scripts/*.sh <cacti_home>/scripts/

     Using your cacti web interface, go to the 'Import Template' section
	   Import 0_19/hadoop_namenode.xml. It was exported with deps.
     Import 0_19/hadoop_datanode.xml. It was exported with deps.
     Import 0_20/hadoop_namenode.xml. It was exported with deps.
     Import 0_20/hadoop_namenode.xml. It was exported with deps.

Testing

   *Replace 0_19 with 0_20 based on your hadoop version
   cd <cacti_home>/scripts/
   sh 0_19/FSNamesystemStatus.sh \
     service:jmx:rmi:///jndi/rmi://10.0.1.2:10001/jmxrmi \
     controlRole <yourpassword>

   Expected Result:
    CapacityTotal:2113748992 CapacityUsed:40960 CapacityRemaining:812830720 BlocksTotal:1 FilesTotal:9 numDeadDataNodes:0 numLiveDataNodes:1

Usage

  Host Templates should exist in cacti
  1 Hadoop NameNode 0_19
  2 Hadoop DataNode 0_19
  3 Hadoop NameNode 0_20
  4 Hadoop DataNode 0_20

  hadooop 20 now supports the RPC object on NameNode,SecondaryNameNode,
  JobTracker and Datanode

  Each graph takes three or four parameters. These would be the same
  values specified in the testing section above.

  1 JMXURL
  2 user
  3 pass
  4 JMXObjectName (not always required)

Using JWalker

  JWalker is a command line JMX walk tool. You can use it like you would use jconsole
  to dump the properties of JMX. In particular your need this to determing the
  name of DataNode objects.

  sh JWalker.sh service:jmx:rmi:///jndi/rmi://10.0.1.2:10001/jmxrmi \
  controlRole <password>

Support

	http://www.jointhegrid.com
	Edward Capriolo
  edlinuxguru@gmail.com

Contribute

	Please do! Bugs, questions, comments, praise, condemnation Let me know!